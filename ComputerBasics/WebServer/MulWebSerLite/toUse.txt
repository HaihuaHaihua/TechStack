struct sockaddr_in clientaddr;

port = atoi(argv[1]);

listenfd = Open_listenfd(port);

connfd = Accept(listenfd, (SA *)&clientaddr, &clientlen); 

Close(connfd); 

struct stat sbuf;

rio_t rio;

Rio_readinitb(&rio, fd);
Rio_readlineb(&rio, buf, MAXLINE); 

strcasecmp(method, "GET")

stat(filename, &sbuf)

(!(S_ISREG(sbuf.st_mode)) || !(S_IRUSR & sbuf.st_mode))

strcmp(buf, "\r\n")
strstr(uri, "cgi-bin")
strcpy(cgiargs, ""); 
strcat(filename, uri);

ptr = index(uri, '?');

sprintf(buf, "HTTP/1.0 200 OK\r\n");

Rio_writen(fd, buf, strlen(buf));

Open(filename, O_RDONLY, 0);

Mmap(0, filesize, PROT_READ, MAP_PRIVATE, srcfd, 0);

Munmap(srcp, filesize); 

setenv("QUERY_STRING", cgiargs, 1); 

Fork() == 0

Dup2(fd, STDOUT_FILENO); 

Execve(filename, emptylist, environ);

Wait(NULL);

unix_error("Wait error");

